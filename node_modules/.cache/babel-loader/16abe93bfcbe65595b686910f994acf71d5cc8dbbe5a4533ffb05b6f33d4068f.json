{"ast":null,"code":"var _jsxFileName = \"/Users/chasedugan/Documents/Dev/comps/src/components/Dropdown.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { GoChevronDown } from 'react-icons/go';\nimport Panel from \"./Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown(_ref) {\n  _s();\n  let {\n    options,\n    value,\n    onChange\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const divEl = useRef();\n  useEffect(() => {\n    const handler = event => {\n      console.log(event.target);\n    };\n    document.addEventListener('click', handler, true);\n  }, []);\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    setIsOpen(false);\n    onChange(option);\n  };\n  const renderedOptions = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover:bg-sky-100 rounded cursor-pointer p-1\",\n      onClick: () => handleOptionClick(option),\n      id: option.value,\n      children: option.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }, this);\n  });\n\n  // let content = 'Select...'\n\n  // if (selection)\n  //  {\n  //     content = selection.label\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-48 relative\",\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"flex justify-between items-center cursor-pointer\",\n      onClick: handleClick,\n      children: [(value === null || value === void 0 ? void 0 : value.label) || 'Select', /*#__PURE__*/_jsxDEV(GoChevronDown, {\n        className: \"text-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Panel, {\n      className: \"absolute top-full\",\n      children: renderedOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n_s(Dropdown, \"vOq9QTgDS0u9AJtv1ufd9s5HWrI=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","useEffect","useRef","GoChevronDown","Panel","jsxDEV","_jsxDEV","Dropdown","_ref","_s","options","value","onChange","isOpen","setIsOpen","divEl","handler","event","console","log","target","document","addEventListener","handleClick","handleOptionClick","option","renderedOptions","map","className","onClick","id","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chasedugan/Documents/Dev/comps/src/components/Dropdown.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport {GoChevronDown} from 'react-icons/go'\nimport Panel from \"./Panel\"\n\nfunction Dropdown({options, value, onChange} ) {\n    const [isOpen, setIsOpen] = useState(false)\n    const divEl = useRef();\n\n    useEffect( () => {\n        const handler = (event) => {\n            console.log(event.target)\n        }\n        document.addEventListener('click', handler, true)\n    }, [] )\n\n    const handleClick = () => {\n            setIsOpen(!isOpen)\n    }\n    const handleOptionClick = (option) => {\n        setIsOpen(false)\n        onChange(option)\n    }\n\n    const renderedOptions = options.map( (option)=> {\n                return <div className=\"hover:bg-sky-100 rounded cursor-pointer p-1\" onClick={ () => handleOptionClick(option) } id={option.value}>\n                    {option.label}\n                </div>\n    } )\n\n    // let content = 'Select...'\n\n    // if (selection)\n    //  {\n    //     content = selection.label\n    //  }\n\n\n    return <div className=\"w-48 relative\">\n        <Panel className=\"flex justify-between items-center cursor-pointer\" onClick={handleClick}>\n            {value?.label || 'Select'}\n            <GoChevronDown className=\"text-lg\" />\n        </Panel>\n    { isOpen &&  <Panel className=\"absolute top-full\">\n            {renderedOptions}\n        </Panel> }\n       \n\n    </div>\n    \n}\n\nexport default Dropdown"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAAQC,aAAa,QAAO,gBAAgB;AAC5C,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,QAAQA,CAAAC,IAAA,EAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACxC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMe,KAAK,GAAGb,MAAM,EAAE;EAEtBD,SAAS,CAAE,MAAM;IACb,MAAMe,OAAO,GAAIC,KAAK,IAAK;MACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC;IAC7B,CAAC;IACDC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,OAAO,EAAE,IAAI,CAAC;EACrD,CAAC,EAAE,EAAE,CAAE;EAEP,MAAMO,WAAW,GAAGA,CAAA,KAAM;IAClBT,SAAS,CAAC,CAACD,MAAM,CAAC;EAC1B,CAAC;EACD,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IAClCX,SAAS,CAAC,KAAK,CAAC;IAChBF,QAAQ,CAACa,MAAM,CAAC;EACpB,CAAC;EAED,MAAMC,eAAe,GAAGhB,OAAO,CAACiB,GAAG,CAAGF,MAAM,IAAI;IACpC,oBAAOnB,OAAA;MAAKsB,SAAS,EAAC,6CAA6C;MAACC,OAAO,EAAGA,CAAA,KAAML,iBAAiB,CAACC,MAAM,CAAG;MAACK,EAAE,EAAEL,MAAM,CAACd,KAAM;MAAAoB,QAAA,EAC5HN,MAAM,CAACO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAClB,CAAC,CAAE;;EAEH;;EAEA;EACA;EACA;EACA;;EAGA,oBAAO9B,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAG,QAAA,gBACjCzB,OAAA,CAACF,KAAK;MAACwB,SAAS,EAAC,kDAAkD;MAACC,OAAO,EAAEN,WAAY;MAAAQ,QAAA,GACpF,CAAApB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEqB,KAAK,KAAI,QAAQ,eACzB1B,OAAA,CAACH,aAAa;QAACyB,SAAS,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,EACVvB,MAAM,iBAAKP,OAAA,CAACF,KAAK;MAACwB,SAAS,EAAC,mBAAmB;MAAAG,QAAA,EACxCL;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGN;AAEV;AAAC3B,EAAA,CA7CQF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}